name: Main branch flow for Inventory checker
run-name: ${{ github.actor }} main branch push
on:
    workflow_dispatch:
    push:
        branches: [main]
    pull_request:
        branches: [main]
jobs:
    snyk-scan:
        runs-on: ubuntu-latest
        steps:
            -
                name: Check out repository code
                uses: actions/checkout@v3
            -
                name: Installing python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.10'
                    cache: 'pip'
            - uses: snyk/actions/setup@master
            - run: |
                    cd app
                    python3 -m venv venv
                    source venv/bin/activate
                    pip install -r requirements.txt
                    snyk test --sarif-file-output=snyk.sarif
                    cat snyk.sarif
              env:
                    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            -
                name: Upload open source dependencies analysis result to GitHub Code Scanning
                uses: github/codeql-action/upload-sarif@v2
                with:
                    sarif_file: app/snyk.sarif
                    category: dependencies-open-source
            -
                name: Snyk code analysis
                run: |
                      cd app
                      snyk ignore --file-path=venv
                      snyk auth $SNYK_TOKEN
                      snyk code test --sarif-file-output=snyk-code.sarif
                      cat snyk-code.sarif
                env:
                    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            -
                name: Upload code analysis result to GitHub Code Scanning
                uses: github/codeql-action/upload-sarif@v2
                with:
                    sarif_file: app/snyk-code.sarif
                    category: code
            -
                name: configure aws credentials
                uses: aws-actions/configure-aws-credentials@v1.7.0
                with:
                    role-to-assume: ${{ env.CICD_ROLE}}
                    role-session-name: GitHub_to_AWS_via_FederatedOIDC
                    aws-region: ${{ env.TF_VAR_AWS_REGION }}
            -
                name: Terraform setup
                uses: hashicorp/setup-terraform@v2
            -
                name: Backend setup and terraform init
                run: |
                      echo 'bucket = "${{ env.BACKEND_BUCKET_NAME }}" > backend.conf'
                      echo 'key    = "${{ env.BACKEND_KEY }}" >> backend.conf'
                      echo 'region = "${{ env.TF_VAR_AWS_REGION }}" >> backend.conf'
                      terraform init -backend-config="bucket=${{ env.BACKEND_BUCKET_NAME }}" -backend-config="key=${{ env.BACKEND_KEY }}" -backend-config="region=${{ env.TF_VAR_AWS_REGION }}"
            -
                name: Terraform plan
                run: |
                      terraform plan
            -
                name: Terraform apply
                run: |
                      terraform plan -auto-approve
